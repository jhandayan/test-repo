<?php

namespace App;

use Illuminate\Foundation\Auth\User as Authenticatable;
use Auth;

class User extends Authenticatable
{
    use HasRoles;
    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'first_name','last_name','email', 'password','parent','status','remember_token'
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::updating(function($user){
            $user->logs()->attach(Auth::user()->id, ['module_name' => 'User', 'log' => Auth::user()->first_name . ' ' . Auth::user()->last_name . ' is updating ' . $user->name]);
        });

        static::creating(function($user){
            if(Auth::check()){
                $user->logs()->attach(Auth::user()->id, ['module_name' => 'User', 'log' => Auth::user()->first_name . ' ' . Auth::user()->last_name . ' is creating ' . $user->name]);
            }

        });

        static::deleting(function($user){
            $user->logs()->attach(Auth::user()->id, ['module_name' => 'User', 'log' => Auth::user()->first_name . ' ' . Auth::user()->last_name . ' is deleting ' . $user->name]);
        });
    }

    public function Role(){
        return $this->belongsToMany(Role::class);
    }
    public function PersonalInfo(){
        $this->hasOne('App\PersonalInfo','user_id','id');
    }

    public function assignedRole($id)
    {
        return $this->roles()->save(
            Role::where('id',$id)->firstOrFail()
        );
    }

    public function usermeta(){
        return $this->hasMany(UserMeta::class);
    }

    public function logs(){
        return $this->belongsToMany(User::class, 'logs', 'module_id')
            ->withTimestamps()
            ->latest('pivot_updated_at');
    }

    public function getFullNameAttribute(){
        return $this->first_name.' '.$this->last_name;
    }
}
